version: '3.8'

services:
  nats:
    image: nats:2.10.7
    container_name: nats
    restart: always
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - nats_data:/data
    command: [
      "-js",
      "-sd", "/data",
      "-m", "8222"
    ]
    networks:
      - events-network

  publisher:
    image: andriiuni/events
    container_name: events-container
    environment:
      EVENT_ENDPOINT: $EVENT_ENDPOINT
    ports:
      - "8080:80"
    restart: always
    networks:
      - events-network

  gateway:
    container_name: gateway-service
    build:
      context: ./gateway
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    environment:
      NODE_ENV: ${NODE_ENV}
      NATS_SERVER_URL: ${NATS_SERVER_URL}
    ports:
      - "3000:3000"
    depends_on:
      - publisher
      - nats
    networks:
      - events-network

  fb-collector:
    container_name: fb-collector-service
    build:
      context: ./fb-collector-service
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    environment:
      NODE_ENV: ${NODE_ENV}
      NATS_SERVER_URL: ${NATS_SERVER_URL}
      DB_URL: ${DB_URL}
    ports:
      - "3001:3000"
    depends_on:
      - gateway
      - postgres
      - nats
    networks:
      - events-network

  postgres:
    image: postgres:16
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - events-network

volumes:
  nats_data:
  pg_data:

networks:
  events-network:
    driver: bridge